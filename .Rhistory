# Confirm match of names in abundance matrix and trait data
trait$`Species Code`==colnames(tree_comm)
rownames(trait) <- trait$`Species Code`
trait <- trait[,-c(1,2)]
# Functional indices
dbfd <- FD::dbFD(trait, tree_comm, w.abun=TRUE, corr = "cailliez")
dbfd <- do.call(cbind, dbfd)
raster("DATA/TerraClimate19812010_vpd.nc")
plot(raster("DATA/TerraClimate19812010_vpd.nc"))
plot(raster("DATA/TerraClimate19812010_vpd.nc"), xlim=c(0,40), ylim=c(20,40))
plot(raster("DATA/TerraClimate19812010_vpd.nc"), xlim=c(0,40), ylim=c(30,40))
plot(raster("DATA/TerraClimate19812010_vpd.nc"), xlim=c(0,40), ylim=c(30,50))
plot(raster("DATA/TerraClimate19812010_vpd.nc"), xlim=c(5,20), ylim=c(35,45))
plot(raster("DATA/TerraClimate19812010_vpd.nc"), xlim=c(5,20), ylim=c(35,48))
plot[,c("LON_ND_W84","LAT_ND_W84")]
extract(raster("DATA/TerraClimate19812010_vpd.nc"), plot[,c("LON_ND_W84","LAT_ND_W84")])
plot$soilmoisture <- extract(raster("DATA/TerraClimate19812010_soil.nc"),
plot[,c("LON_ND_W84","LAT_ND_W84")])
plot$vpd
# Add environmental data
plot$vpd <- extract(raster("DATA/TerraClimate19812010_vpd.nc"),
plot[,c("LON_ND_W84","LAT_ND_W84")])
plot$vpd
plot(plot$soilmoisture, plot$vpd)
plot(plot$soilmoisture, plot$vpd)
cor(plot$soilmoisture, plot$vpd)
head(plot)
# Read tree data
tree <- read.table("DATA/RAW/infc05_apv/t2_05_apv.csv", sep=";", header=T)
tree <- tree[tree$idpunto %in% plot$idpunto,]
# Match SPcod of the trait dataset + take out unmatching SPcod
tree <- tree[tree$SPcod %in% trait$`Species Code`,]
# Read trait data
trait <- as.data.frame(read_excel("DATA/TraitDataFrame.xlsx",
sheet = "5 traits + 1NA",
col_types = c("numeric",
"text",
"numeric",
"numeric",
"numeric",
"numeric",
"numeric"), na = "na"))
# Make a community abundance matrix
tree_comm <- as.matrix(as.data.frame.matrix(table(tree$idpunto, tree$SPcod)))
# Confirm match of names in abundance matrix and trait data
trait$`Species Code`==colnames(tree_comm)
rownames(trait) <- trait$`Species Code`
trait <- trait[,-c(1,2)]
dbfd
plot <- cbind(plot, dbfd)
dbfd
rownames(dbfd)
colnames(tree_comm)
tree_comm
# Make a community abundance matrix
tree_comm <- as.matrix(as.data.frame.matrix(table(tree$idpunto, tree$SPcod)))
tree_comm
table(tree$idpunto, tree$SPcod)
# Read trait data
trait <- as.data.frame(read_excel("DATA/TraitDataFrame.xlsx",
sheet = "5 traits + 1NA",
col_types = c("numeric",
"text",
"numeric",
"numeric",
"numeric",
"numeric",
"numeric"), na = "na"))
# Read tree data
tree <- read.table("DATA/RAW/infc05_apv/t2_05_apv.csv", sep=";", header=T)
tree <- tree[tree$idpunto %in% plot$idpunto,]
tree
trait
# Match SPcod of the trait dataset + take out unmatching SPcod
tree <- tree[tree$SPcod %in% trait$`Species Code`,]
tree
# Make a community abundance matrix
tree_comm <- as.matrix(as.data.frame.matrix(table(tree$idpunto, tree$SPcod)))
tree_comm
colnames(tree_comm)
rownames(dbfd)
rownames(tree_comm)
rownames(tree_comm)==rownames(dbfd)
rownames(tree_comm) == plot$idpunto
rownames(tree_comm) %in% plot$idpunto
plot$idpunto %in% rownames(tree_comm)
dbfd[match(plot$idpunto, rownames(dbfd)),]
cbind(plot, dbfd[match(plot$idpunto, rownames(dbfd)),])
plot <- cbind(plot, dbfd[match(plot$idpunto, rownames(dbfd)),])
head(plot)
plot(plot$FDis, plot$W4apv_ha)
cor(plot$FDis, plot$W4apv_ha)
cor(plot$FDis, plot$W4apv_ha, use='p')
cor(plot$FDis, plot$ICVapv_ha, use='p')
plot(plot$FDis, plot$ICVapv_ha)
plot$FRic
plot(plot$FRic, plot$ICVapv_ha)
cor(plot$FRic, plot$ICVapv_ha, use='p')
plot(plot$CWM.Height, plot$ICVapv_ha)
cor(plot$CWM.Height, plot$ICVapv_ha)
cor(plot$CWM.Height, plot$ICVapv_ha, use='p')
plot(plot$CWM.StemDensity, plot$ICVapv_ha)
cor(plot$CWM.StemDensity, plot$ICVapv_ha, use='p')
plot(plot$CWM.XylemVulnerability, plot$ICVapv_ha)
cor(plot$CWM.XylemVulnerability, plot$ICVapv_ha, use='p')
hist(trait$SeedMass)
hist(trait$Height)
hist(log10(trait$Height))
hist(trait$SeedMass)
hist(log10(trait$SeedMass))
hist(trait$Height)
hist(log10(trait$Height))
hist(trait$SLA)
hist(log10(trait$SLA))
hist(trait$SLA)
hist(log10(trait$SLA))
hist(trait$StemDensity)
hist(trait$XylemVulnerability)
hist(log10(trait$XylemVulnerability))
hist(log10(-trait$XylemVulnerability))
hist(trait$XylemVulnerability)
hist(trait$SeedMass)
hist(log10(trait$SeedMass))
hist(trait$Height)
hist(log10(trait$Height))
hist(trait$SLA)
hist(log10(trait$SLA))
hist(trait$SLA)
hist(log10(trait$SLA))
trait$SeedMass_log <- log10(trait$SeedMass)
trait$Height_log <- log10(trait$Height)
trait$SLA_log <- log10(trait$SLA)
# Functional indices
dbfd <- FD::dbFD(trait[,-c("SeedMass","Height","SLA")],
tree_comm, w.abun=TRUE, corr = "cailliez")
trait
head(trait)
# Read trait data
trait <- as.data.frame(read_excel("DATA/TraitDataFrame.xlsx",
sheet = "5 traits + 1NA",
col_types = c("numeric",
"text",
"numeric",
"numeric",
"numeric",
"numeric",
"numeric"), na = "na"))
# Confirm match of names in abundance matrix and trait data
trait$`Species Code`==colnames(tree_comm)
rownames(trait) <- trait$`Species Code`
trait <- trait[,-c(1,2)]
trait$SeedMass_log <- log10(trait$SeedMass)
trait$Height_log <- log10(trait$Height)
trait$SLA_log <- log10(trait$SLA)
# Functional indices
dbfd <- FD::dbFD(trait[,-c("SeedMass","Height","SLA")],
tree_comm, w.abun=TRUE, corr = "cailliez")
trait[,colnames(trait) %in% c("SeedMass","Height","SLA")]
trait[,!colnames(trait) %in% c("SeedMass","Height","SLA")]
# Functional indices
dbfd <- FD::dbFD(trait[,!colnames(trait) %in% c("SeedMass","Height","SLA")],
tree_comm, w.abun=TRUE, corr = "cailliez")
# Functional indices
dbfd <- FD::dbFD(trait[,!colnames(trait) %in% c("SeedMass","Height","SLA")],
tree_comm, w.abun=TRUE)
# Functional indices
dbfd <- FD::dbFD(trait[,!colnames(trait) %in% c("SeedMass","Height","SLA")],
tree_comm, w.abun=TRUE, corr = "cailliez")
dbfd
dbfd <- do.call(cbind, dbfd)
plot <- cbind(plot, dbfd[match(plot$idpunto, rownames(dbfd)),])
head(plot)
plot(plot$FDis, plot$W4apv_ha)
cor(plot$FDis, plot$ICVapv_ha, use='p')
plot(plot$CWM.XylemVulnerability, plot$ICVapv_ha)
cor(plot$CWM.XylemVulnerability, plot$ICVapv_ha, use='p')
plot(plot$CWM.Height_log, plot$ICVapv_ha)
trait[,!colnames(trait) %in% c("SeedMass","Height","SLA")]
dbfd
dbfd <- do.call(cbind, dbfd)
dbfd
plot <- cbind(plot, dbfd[match(plot$idpunto, rownames(dbfd)),])
plot
library(raster)
library(readxl)
library(writexl)
library(dplyr)
library(ncdf4)
library(data.table)
# plot <- readxl::read_xlsx("DATA/PlotData.xlsx")
# Read plot data
plot <- read.csv("DATA/RAW/infc05_quantiF3/t1_05_quantiF3.csv", sep=";")
plot <- plot[plot$codcfor < 17,] # Filter unwanted Forest codes out
# Add environmental data
plot$vpd <- extract(raster("DATA/TerraClimate19812010_vpd.nc"),
plot[,c("LON_ND_W84","LAT_ND_W84")])
plot$soilmoisture <- extract(raster("DATA/TerraClimate19812010_soil.nc"),
plot[,c("LON_ND_W84","LAT_ND_W84")])
# Read tree data
tree <- read.table("DATA/RAW/infc05_apv/t2_05_apv.csv", sep=";", header=T)
tree <- tree[tree$idpunto %in% plot$idpunto,]
# Read trait data
trait <- as.data.frame(read_excel("DATA/TraitDataFrame.xlsx",
sheet = "5 traits + 1NA",
col_types = c("numeric",
"text",
"numeric",
"numeric",
"numeric",
"numeric",
"numeric"), na = "na"))
# Match SPcod of the trait dataset + take out unmatching SPcod
tree <- tree[tree$SPcod %in% trait$`Species Code`,]
# Make a community abundance matrix
tree_comm <- as.matrix(as.data.frame.matrix(table(tree$idpunto, tree$SPcod)))
# Confirm match of names in abundance matrix and trait data
trait$`Species Code`==colnames(tree_comm)
rownames(trait) <- trait$`Species Code`
trait <- trait[,-c(1,2)]
hist(trait$SeedMass)
hist(log10(trait$SeedMass))
hist(trait$Height)
hist(log10(trait$Height))
hist(trait$SLA)
hist(log10(trait$SLA))
hist(trait$StemDensity)
hist(trait$XylemVulnerability)
trait$SeedMass_log <- log10(trait$SeedMass)
trait$Height_log <- log10(trait$Height)
trait$SLA_log <- log10(trait$SLA)
# Functional indices
dbfd <- FD::dbFD(trait[,!colnames(trait) %in% c("SeedMass","Height","SLA")],
tree_comm, w.abun=TRUE, corr = "cailliez")
dbfd <- do.call(cbind, dbfd)
plot <- cbind(plot, dbfd[match(plot$idpunto, rownames(dbfd)),])
plot(plot$FDis, plot$W4apv_ha)
cor(plot$FDis, plot$ICVapv_ha, use='p')
plot(plot$CWM.Height_log, plot$ICVapv_ha)
plot(plot$CWM.Height, plot$ICVapv_ha)
plot(exp(plot$CWM.Height_, plot$ICVapv_ha)
plot(exp(plot$CWM.Height), plot$ICVapv_ha)
plot(exp(plot$CWM.Height), plot$ICVapv_ha)
plot(10^plot$CWM.Height, plot$ICVapv_ha)
cor(10^plot$CWM.Height, plot$ICVapv_ha)
cor(10^plot$CWM.Height, plot$ICVapv_ha, use='p')
cor(10^plot$CWM.Height, plot$W4apv_ha, use='p')
plot(10^plot$CWM.Height, plot$W4apv_ha)
plot(plot$FDis, plot$W4apv_ha)
plot(plot$FDiv, plot$W4apv_ha)
cor(plot$FDiv, plot$W4apv_ha, use='p')
plot(plot$qual.FRic, plot$W4apv_ha)
plot(plot$RaoQ, plot$W4apv_ha)
cor(plot$RaoQ, plot$W4apv_ha, use='p')
cor.test(plot$RaoQ, plot$W4apv_ha, use='p')
### Load rasterlayer
load("/Users/au529793/Dropbox/INFC data/Climate classification/ClimateB.Rdata")
### extract Climate classification
plot$climate_classification <- raster::extract(ClimateB, plot[,c("LON_ND_W84","LAT_ND_W84")])
plot <- read.csv("DATA/RAW/infc05_quantiF3/t1_05_quantiF3.csv", sep=";")
plot <- plot[plot$codcfor < 17,] # Filter unwanted Forest codes out
# Add environmental data
plot$vpd <- extract(raster("DATA/TerraClimate19812010_vpd.nc"),
plot[,c("LON_ND_W84","LAT_ND_W84")])
plot$soilmoisture <- extract(raster("DATA/TerraClimate19812010_soil.nc"),
plot[,c("LON_ND_W84","LAT_ND_W84")])
### Load rasterlayer
load("/Users/au529793/Dropbox/INFC data/Climate classification/ClimateB.Rdata")
### extract Climate classification
plot$climate_classification <- raster::extract(ClimateB, plot[,c("LON_ND_W84","LAT_ND_W84")])
### extract Climate classification
plot$climate_classification <- raster::extract(ClimateB, plot[,c("LON_ND_W84","LAT_ND_W84")])
# Read tree data
tree <- read.table("DATA/RAW/infc05_apv/t2_05_apv.csv", sep=";", header=T)
tree <- tree[tree$idpunto %in% plot$idpunto,]
# Read trait data
trait <- as.data.frame(read_excel("DATA/TraitDataFrame.xlsx",
sheet = "5 traits + 1NA",
col_types = c("numeric",
"text",
"numeric",
"numeric",
"numeric",
"numeric",
"numeric"), na = "na"))
# Match SPcod of the trait dataset + take out unmatching SPcod
tree <- tree[tree$SPcod %in% trait$`Species Code`,]
# Make a community abundance matrix
tree_comm <- as.matrix(as.data.frame.matrix(table(tree$idpunto, tree$SPcod)))
# Confirm match of names in abundance matrix and trait data
trait$`Species Code`==colnames(tree_comm)
rownames(trait) <- trait$`Species Code`
trait <- trait[,-c(1,2)]
hist(trait$SeedMass)
hist(log10(trait$SeedMass))
hist(trait$Height)
hist(log10(trait$Height))
hist(trait$SLA)
hist(log10(trait$SLA))
hist(trait$StemDensity)
hist(trait$XylemVulnerability)
trait$SeedMass_log <- log10(trait$SeedMass)
trait$Height_log <- log10(trait$Height)
trait$SLA_log <- log10(trait$SLA)
# Functional indices
dbfd <- FD::dbFD(trait[,!colnames(trait) %in% c("SeedMass","Height","SLA")],
tree_comm, w.abun=TRUE, corr = "cailliez")
dbfd <- do.call(cbind, dbfd)
?FD
tree_comm
tree_comm>0
1*(tree_comm>0)
tree_comm_pa <- 1*(tree_comm>0)
fdis <- FD::fdisp(trait[,!colnames(trait) %in% c("SeedMass","Height","SLA")], tree_comm_pa)
trait[,!colnames(trait) %in% c("SeedMass","Height","SLA")]
dist(trait[,!colnames(trait) %in% c("SeedMass","Height","SLA")])
d <- dist(trait[,!colnames(trait) %in% c("SeedMass","Height","SLA")])
fdis <- FD::fdisp(d, tree_comm_pa)
fdis
str(fdis)
fdis$FDis
plot(plot$W4apv_ha , fdis$FDis)
rownames(fdis)
rownames(fdis$FDis)
fdis
fdis$FDis
plot$W4apv_ha
plot(plot$W4apv_ha , fdis$FDis)
tree_comm_pa
rownames(tree_comm_pa)
plot$idpunto
rownames(tree_comm_pa) == plot$idpunto
rownames(tree_comm_pa)
plot$idpunto
# Read trait data
trait <- as.data.frame(read_excel("DATA/TraitDataFrame.xlsx",
sheet = "5 traits + 1NA",
col_types = c("n", "text",
"numeric",
"numeric",
"numeric",
"numeric",
"numeric"), na = "na"))
?read_excel
# Read trait data
trait <- as.data.frame(read_excel("DATA/TraitDataFrame.xlsx",
sheet = "5 traits + 1NA",
na = "na"))
trait
# Read trait data
trait <- as.data.frame(read_excel("DATA/TraitDataFrame.xlsx",
sheet = "5 traits + 1NA", na = "na"))
# Match SPcod of the trait dataset to tree data
tree <- tree[tree$SPcod %in% trait$`Species Code`,]
# Load + extract climate classificationo raster layer
load("DATA/ClimateB.Rdata")
plot(fdis)
plot <- cbind(plot, dbfd[match(plot$idpunto, rownames(dbfd)),])
plot(fdis$FDis, plot$FDis)
plot(plot$W4apv_ha , fdis$FDis)
plot(10^plot$CWM.Height, plot$W4apv_ha)
# Read plot data
plot <- read.csv("DATA/RAW/infc05_quantiF3/t1_05_quantiF3.csv", sep=";")
plot <- plot[plot$codcfor < 17,] # Filter unwanted Forest codes out
# Add environmental data
plot$vpd <- extract(raster("DATA/TerraClimate19812010_vpd.nc"),
plot[,c("LON_ND_W84","LAT_ND_W84")])
library(raster)
# Add environmental data
plot$vpd <- extract(raster("DATA/TerraClimate19812010_vpd.nc"),
plot[,c("LON_ND_W84","LAT_ND_W84")])
plot$soilmoisture <- extract(raster("DATA/TerraClimate19812010_soil.nc"),
plot[,c("LON_ND_W84","LAT_ND_W84")])
# Load + extract climate classificationo raster layer
load("DATA/ClimateB.Rdata")
plot$climate_classification <- raster::extract(ClimateB, plot[,c("LON_ND_W84","LAT_ND_W84")])
# Read tree data
tree <- read.table("DATA/RAW/infc05_apv/t2_05_apv.csv", sep=";", header=T)
tree <- tree[tree$idpunto %in% plot$idpunto,]
# Read trait data
trait <- as.data.frame(read_excel("DATA/TraitDataFrame.xlsx",
sheet = "5 traits + 1NA", na = "na"))
# Read trait data
trait <- as.data.frame(read_excel("DATA/TraitDataFrame.xlsx",
sheet = "5 traits + 1NA", na = "na"))
library(readxl)
# Read trait data
trait <- as.data.frame(read_excel("DATA/TraitDataFrame.xlsx",
sheet = "5 traits + 1NA", na = "na"))
# Match SPcod of the trait dataset to tree data
tree <- tree[tree$SPcod %in% trait$`Species Code`,]
# Make a community abundance matrix
tree_comm <- as.matrix(as.data.frame.matrix(table(tree$idpunto, tree$SPcod)))
tree_comm_pa <- 1 * (tree_comm > 0)
# Confirm match of names in abundance matrix and trait data
trait$`Species Code`==colnames(tree_comm)
rownames(trait) <- trait$`Species Code`
trait <- trait[,-c(1,2)]
# Log-transform some variables
trait$SeedMass_log <- log10(trait$SeedMass)
trait$Height_log <- log10(trait$Height)
log10(trait$SeedMass)
trait$SeedMass
# Read trait data
trait <- as.data.frame(read_excel("DATA/TraitDataFrame.xlsx",
sheet = "5 traits + 1NA",
col_types = c("text",
"text",
"numeric",
"numeric",
"numeric",
"numeric",
"numeric")na = "na"))
# Read trait data
trait <- as.data.frame(read_excel("DATA/TraitDataFrame.xlsx",
sheet = "5 traits + 1NA",
col_types = c("text",
"text",
"numeric",
"numeric",
"numeric",
"numeric",
"numeric"), na = "na"))
# Match SPcod of the trait dataset to tree data
tree <- tree[tree$SPcod %in% trait$`Species Code`,]
# Make a community abundance matrix
tree_comm <- as.matrix(as.data.frame.matrix(table(tree$idpunto, tree$SPcod)))
tree_comm_pa <- 1 * (tree_comm > 0)
# Confirm match of names in abundance matrix and trait data
trait$`Species Code`==colnames(tree_comm)
rownames(trait) <- trait$`Species Code`
trait <- trait[,-c(1,2)]
# Log-transform some variables
trait$SeedMass_log <- log10(trait$SeedMass)
trait$Height_log <- log10(trait$Height)
trait$SLA_log <- log10(trait$SLA)
# Functional indices
dbfd <- FD::dbFD(trait[,!colnames(trait) %in% c("SeedMass","Height","SLA")],
tree_comm, w.abun=TRUE, corr = "cailliez")
dbfd <- do.call(cbind, dbfd)
library(maps)
dbfd <- do.call(cbind, dbfd)
plot <- cbind(plot, dbfd[match(plot$idpunto, rownames(dbfd)),])
library(maps)
map(xlim=c(15,30), ylim=c(30,50))
map(xlim=c(5,30), ylim=c(30,50))
map(xlim=c(0,30), ylim=c(30,50))
map(xlim=c(0,30), ylim=c(30,50))
map(xlim=c(0,30), ylim=c(30,50), axes=T)
axis(1); axis(2)
map(xlim=c(5,20), ylim=c(35,48))
axis(1); axis(2)
points(plot[,c("LON_ND_W84","LAT_ND_W84")], col=plot$fd)
library(maps)
map(xlim=c(5,20), ylim=c(35,48))
axis(1); axis(2)
points(plot[,c("LON_ND_W84","LAT_ND_W84")], col=plot$fd)
plot[,c("LON_ND_W84","LAT_ND_W84")]
plot$fd
plot$FDis
dbfd
plot <- cbind(plot, dbfd[match(plot$idpunto, rownames(dbfd)),])
plot
plot$idpunto
rownames(dbfd)
dbfd
dbfd
tree_comm
dbfd
# Functional indices
dbfd <- FD::dbFD(trait[,!colnames(trait) %in% c("SeedMass","Height","SLA")],
tree_comm, w.abun=TRUE, corr = "cailliez")
dbfd
dbfd <- do.call(cbind, dbfd)
dbfd
rownames(dbfd)
plot <- cbind(plot, dbfd[match(plot$idpunto, rownames(dbfd)),])
plot$FDis
plot$FDis
dbfd
match(plot$idpunto, rownames(dbfd))
dbfd[match(plot$idpunto, rownames(dbfd)),]
head(plot)
# Read plot data
plot <- read.csv("DATA/RAW/infc05_quantiF3/t1_05_quantiF3.csv", sep=";")
plot <- plot[plot$codcfor < 17,] # Filter unwanted Forest codes out
# Add environmental data
plot$vpd <- extract(raster("DATA/TerraClimate19812010_vpd.nc"),
plot[,c("LON_ND_W84","LAT_ND_W84")])
# Load + extract climate classification raster layer
load("DATA/ClimateB.Rdata")
plot$climate_classification <- raster::extract(ClimateB, plot[,c("LON_ND_W84","LAT_ND_W84")])
plot$soilmoisture <- extract(raster("DATA/TerraClimate19812010_soil.nc"),
plot[,c("LON_ND_W84","LAT_ND_W84")])
plot <- cbind(plot, dbfd[match(plot$idpunto, rownames(dbfd)),])
plot
plot$FDis
cut(plot$FDis,5)
points(plot[,c("LON_ND_W84","LAT_ND_W84")], col=cut(plot$FDis,5))
plot(plot$vpd, plot$FDis)
plot(plot$vpd, plot$FDis, log='x')
plot(plot$vpd, plot$FDis, log='x')
plot(plot$vpd, plot$FDis, log='x', col=plot$climate_classification)
plot$climate_classification
plot(plot$vpd, plot$FDis, log='x', col=plot$climate_classification+1)
plot(plot$vpd, plot$FDis, log='x', col=plot$climate_classification+1, cex=0.5)
plot(plot$soilmoisture, plot$FDis, log='x', col=plot$climate_classification+1, cex=0.5)
plot(plot$soilmoisture, plot$CWM.XylemVulnerability,
log='x', col=plot$climate_classification+1, cex=0.5)
plot(plot$vpd, plot$CWM.XylemVulnerability,
log='x', col=plot$climate_classification+1, cex=0.5)
plot(plot$vpd, plot$CWM.XylemVulnerability,
col=plot$climate_classification+1, cex=0.5)
